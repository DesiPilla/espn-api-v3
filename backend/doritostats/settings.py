"""
Django settings for doritostats project.

Generated by 'django-admin startproject' using Django 3.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/e

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

import os
from pathlib import Path

import dj_database_url

# Initialise environment variables
import dotenv

dotenv.load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv("DJANGO_SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]
CORS_ALLOW_CREDENTIALS = True

CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",  # React dev server
    "http://127.0.0.1:3000",  # Localhost with IP
]
CSRF_TRUSTED_ORIGINS = [
    "https://doritostats.up.railway.app",
    "http://localhost:3000",
]
CSRF_COOKIE_NAME = "csrftoken"
CSRF_COOKIE_HTTPONLY = False  # Set to False so the cookie can be read by JavaScript


LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "formatters": {
        "verbose": {
            "format": "{levelname} {asctime} {module} {message}",
            "style": "{",
        },
        "simple": {
            "format": "{levelname}: {message}",
            "style": "{",
        },
    },
    # "handlers": {
    #     "console": {
    #         "level": "INFO",  # Capture INFO and above (this includes INFO, WARNING, ERROR)
    #         "class": "logging.StreamHandler",
    #     },
    #     "file": {
    #         "level": "ERROR",  # Capture only ERROR and above (this includes ERROR, CRITICAL)
    #         "class": "logging.FileHandler",
    #         "filename": os.path.join(BASE_DIR, "debug.log"),  # ensure BASE_DIR is set
    #         "formatter": "verbose",
    #     },
    # },
    # "loggers": {
    #     "django": {
    #         "handlers": ["file"],
    #         "level": "INFO",  # Capture INFO and above
    #         "propagate": True,
    #     },
    #     "django.request": {
    #         "handlers": ["file"],  # Log to both console and file
    #         "level": "INFO",  # Capture INFO and above
    #         "propagate": False,
    #     },
    #     "django.db.backends": {
    #         "level": "INFO",  # Capture INFO and above (database queries)
    #         "handlers": ["file"],
    #     },
    #     "root": {
    #         "handlers": ["file"],
    #         "level": "INFO",
    #     },
    # },
}


# Application definition
INSTALLED_APPS = [
    "corsheaders",
    "fantasy_stats.apps.FantasyStatsConfig",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django.contrib.sitemaps",
    "rest_framework",
]

MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
]

ROOT_URLCONF = "doritostats.urls"
TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [
            os.path.join(BASE_DIR, "frontend/build/static"),
        ],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
    # {
    #     "BACKENDS": {
    #         "django.template.backends.django.DjangoTemplates": {
    #             "DIRS": [os.path.join(BASE_DIR, "frontend/build")],
    #             "APP_DIRS": True,
    #             "OPTIONS": {
    #                 "context_processors": [
    #                     "django.template.context_processors.debug",
    #                     "django.template.context_processors.request",
    #                     "django.contrib.auth.context_processors.auth",
    #                     "django.contrib.messages.context_processors.messages",
    #                 ],
    #             },
    #         },
    #     },
    # },
]

WSGI_APPLICATION = "doritostats.wsgi.application"


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases
DATABASES = {
    "default": dj_database_url.config(
        default=os.getenv("DATABASE_URL"), conn_max_age=600
    )
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator"
    },
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator"},
    {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator"},
    {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator"},
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "America/New_York"

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

# This setting tells Django at which URL static files are going to be served to the user.
# Here, they well be accessible at your-domain.onrender.com/static/...
STATIC_URL = "static/"
STATIC_ROOT = os.path.join(BASE_DIR, STATIC_URL)
STATICFILES_DIRS = [
    # os.path.join(BASE_DIR, "static/"),
    os.path.join(BASE_DIR, "frontend/build/"),
    os.path.join(BASE_DIR, "frontend/build/static/"),
]

# Following settings only make sense on production and may break development environments.
if not DEBUG:  # Tell Django to copy statics to the `staticfiles` directory
    # in your application directory on Render.
    STATIC_ROOT = os.path.join(BASE_DIR, STATIC_URL)
    # Turn on WhiteNoise storage backend that takes care of compressing static files
    # and creating unique names for each version so they can safely be cached forever.
    STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
